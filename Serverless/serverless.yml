

service: my-express-app
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

custom:
  tableName: 'Users'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt":["UsersDDBTable", "Arn"]}
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  app:
    handler: index.handler
    events:
      - http: 
          path: /
          method: any
          cors: true
      - http: 'ANY {proxy+}'
  saveUser:
    handler: index.handler
    events:
      - http:
          path: /save-user
          method: post
          cors: true

resources:
  Resources:
    UsersDDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - 
            AttributeName: ID
            AttributeType: S
        KeySchema:
          - 
            AttributeName: ID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}